{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["Dashboard","rows","columns","layout","gap","style","height","width","display","gridTemplateRows","gridTemplateColumns","Object","id","x","y","w","h","Tag","isScrollable","ref","console","el","key","gridColumnStart","gridRowStart","gridColumnEnd","gridRowEnd","overflow","React","DashboardItem","children","position","LAYOUT_CONFIG","freeze","a","component","padding","background","border","repeat","b","c","d","App","flexDirection","margin","flex","ReactDOM","render","document","getElementById"],"mappings":"wPAEaA,EAAY,SAAC,G,IACxBC,SACAC,YACAC,WACAC,QAgBA,OACE,+BACEC,MAAO,CACLC,OADK,OAELC,MAFK,OAGLC,QAHK,OAILC,iBAAkB,UAAF,EAJX,oBAKLC,oBAAqB,UAAF,EALd,oBAOLN,QAGDO,OAAA,gBACC,gBAAEC,EAAF,YAAQC,EAAR,IAAWC,EAAX,IAAcC,EAAd,IAAiBC,EAAjB,IAA+BC,EAA/B,YAAoCC,EAApC,sBACE,+BACEC,IAAK,YACH,GACAC,iBAAkBC,EAAlBD,0BAEFE,IAAKV,EACLP,MAAO,CACLkB,gBAAiB,GADZ,EAELC,aAAc,GAFT,EAGLC,cAAe,QAHV,EAILC,WAAY,QAJP,EAKLC,SAAU,WAGZ,2BAAeT,aAAcA,GAC3BU,0BAhBN,aAyBFC,EAAgB,SAAC,G,IACrBX,iBACAY,aAKA,OACE,+BACEzB,MAAO,CACLsB,SAAUT,EAAe,OADpB,SAELZ,OAFK,OAGLC,MAHK,OAILwB,SAAU,aAGZ,+BACE1B,MAAO,CACLC,OAASY,OADJ,EACmB,OACxBX,MAAQW,OAFH,EAEkB,OACvBa,SAAU,aAblB,KCXIC,EAAgBrB,OAAOsB,OAAO,CAClCC,EAAG,CAAErB,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGmB,UArDL,kBACxB,yBACE9B,MAAO,CACLC,OAAQ,OACR8B,QAAS,MACTC,WAAY,OACZC,OAAQ,mBAGT,eAAeC,OAAO,OA6CzBC,EAAG,CAAE3B,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGmB,UAzCL,kBACxB,yBACE9B,MAAO,CACLC,OAAQ,OACR8B,QAAS,MACTC,WAAY,OACZC,OAAQ,mBALZ,iBAyCAG,EAAG,CAAE5B,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAIC,EAAG,EAAGmB,UA7BN,kBACxB,yBACE9B,MAAO,CACLC,OAAQ,OACR8B,QAAS,MACTC,WAAY,OACZC,OAAQ,mBALZ,iBA6BAI,EAAG,CAAE7B,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGmB,UAjBL,kBACxB,yBACE9B,MAAO,CACLC,OAAQ,OACR8B,QAAS,MACTC,WAAY,OACZC,OAAQ,mBAGT,eAAeC,OAAO,OAQ2BrB,cAAc,KAyDrDyB,EAtDH,WACV,OACE,yBACEtC,MAAO,CACLC,OAAQ,QACR8B,QAAS,OACTE,OAAQ,kBACR9B,QAAS,OACToC,cAAe,SACfP,WAAY,SAGd,yBACEhC,MAAO,CACLwC,OAAQ,OACRT,QAAS,OACT9B,OAAQ,OACRgC,OAAQ,qBAGZ,yBACEjC,MAAO,CACLyC,KAAM,EACNtC,QAAS,SAGX,yBACEH,MAAO,CACLyC,KAAM,EACND,OAAQ,OACRT,QAAS,OACTE,OAAQ,qBAGZ,yBACEjC,MAAO,CACLyC,KAAM,GACND,OAAQ,OACRP,OAAQ,kBACRD,WAAY,SAGd,kBAAC,EAAD,CACEnC,QAAS,GACTD,KAAM,GACNE,OAAQ6B,EACR5B,IAAI,eCvGhB2C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d45b22cd.chunk.js","sourcesContent":["import * as React from 'react'\n\nexport const Dashboard = ({\n  rows,\n  columns,\n  layout,\n  gap\n}: {\n  rows: number\n  columns: number\n  layout: {\n    [id: string]: {\n      x: number\n      y: number\n      h: number\n      w: number\n      component: any // ???\n      isScrollable?: boolean\n    }\n  }\n  gap?: string\n}) => {\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '100%',\n        display: 'grid',\n        gridTemplateRows: `repeat(${rows}, minmax(0, 1fr))`,\n        gridTemplateColumns: `repeat(${columns}, minmax(0, 1fr))`,\n        // optional\n        gap\n      }}\n    >\n      {Object.entries(layout).map(\n        ([id, { x, y, w, h, component: Tag, isScrollable }]) => (\n          <div\n            ref={(el) => {\n              if (!el) return\n              console.log(name, el.getBoundingClientRect())\n            }}\n            key={id}\n            style={{\n              gridColumnStart: `${x}`,\n              gridRowStart: `${y}`,\n              gridColumnEnd: `span ${w}`,\n              gridRowEnd: `span ${h}`,\n              overflow: 'hidden'\n            }}\n          >\n            <DashboardItem isScrollable={isScrollable}>\n              <Tag />\n            </DashboardItem>\n          </div>\n        )\n      )}\n    </div>\n  )\n}\n\nconst DashboardItem = ({\n  isScrollable,\n  children\n}: {\n  isScrollable?: boolean\n  children: React.ReactElement\n}) => {\n  return (\n    <div\n      style={{\n        overflow: isScrollable ? 'auto' : 'hidden',\n        height: '100%',\n        width: '100%',\n        position: 'relative'\n      }}\n    >\n      <div\n        style={{\n          height: !isScrollable ? '100%' : undefined,\n          width: !isScrollable ? '100%' : undefined,\n          position: 'absolute'\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Dashboard } from 'react-grid-dashboard'\n\nexport const ComponentA = () => (\n  <div\n    style={{\n      height: '100%',\n      padding: '5px',\n      background: '#eee',\n      border: '1px solid #999'\n    }}\n  >\n    {'component A '.repeat(20)}\n  </div>\n)\n\nexport const ComponentB = () => (\n  <div\n    style={{\n      height: '100%',\n      padding: '5px',\n      background: '#eee',\n      border: '1px solid #999'\n    }}\n  >\n    component B\n  </div>\n)\n\nexport const ComponentC = () => (\n  <div\n    style={{\n      height: '100%',\n      padding: '5px',\n      background: '#eee',\n      border: '1px solid #999'\n    }}\n  >\n    component C\n  </div>\n)\n\nexport const ComponentD = () => (\n  <div\n    style={{\n      height: '100%',\n      padding: '5px',\n      background: '#eee',\n      border: '1px solid #999'\n    }}\n  >\n    {'component D '.repeat(400)}\n  </div>\n)\n\nconst LAYOUT_CONFIG = Object.freeze({\n  a: { x: 1, y: 1, w: 5, h: 5, component: ComponentA },\n  b: { x: 1, y: 6, w: 5, h: 7, component: ComponentB },\n  c: { x: 6, y: 1, w: 19, h: 6, component: ComponentC },\n  d: { x: 6, y: 7, w: 8, h: 6, component: ComponentD, isScrollable: true }\n})\n\nconst App = () => {\n  return (\n    <div\n      style={{\n        height: '100vh',\n        padding: '10px',\n        border: '2px dashed #aaa',\n        display: 'flex',\n        flexDirection: 'column',\n        background: '#bbb'\n      }}\n    >\n      <div\n        style={{\n          margin: '10px',\n          padding: '10px',\n          height: '70px',\n          border: '2px dashed #aaa'\n        }}\n      ></div>\n      <div\n        style={{\n          flex: 1,\n          display: 'flex'\n        }}\n      >\n        <div\n          style={{\n            flex: 1,\n            margin: '10px',\n            padding: '10px',\n            border: '2px dashed #aaa'\n          }}\n        ></div>\n        <div\n          style={{\n            flex: 10,\n            margin: '10px',\n            border: '2px dashed #aaa',\n            background: '#ccc'\n          }}\n        >\n          <Dashboard\n            columns={24}\n            rows={12}\n            layout={LAYOUT_CONFIG}\n            gap='0.4rem'\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}